apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: accountservice
  name: accountservice-deployment
spec: 
  replicas: 1
  selector:
    matchLabels:
      app: accountservice
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: accountservice
    spec:
      containers:
      - image: localhost:5000/microservice-example/accountservice
        imagePullPolicy: IfNotPresent
        name: accountservice-container
        ports:
          - containerPort: 6767
            name: http
        readinessProbe:
          httpGet:
            path: /health
            port: http
            scheme: HTTP
          initialDelaySeconds: 15
          timeoutSeconds: 1
          periodSeconds: 15
        livenessProbe:
          httpGet:
            path: /health
            port: http  # could also be set to 6767 - it's the same
          initialDelaySeconds: 3
          periodSeconds: 3
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
---
kind: Service
apiVersion: v1
metadata:
  name: accountservice-service
spec:
  selector:
    app: accountservice
  ports:
  - protocol: TCP
    targetPort: 6767
    port: 6767
    name: http
  type: LoadBalancer